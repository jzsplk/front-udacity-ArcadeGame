function addEnemy(t){for(var e=0;e<t;e++){var r=new Enemy;r.initProperty(),allEnemies.push(r)}}function addObstacle(t){for(var e=0;e<t;e++){var r=new Obstacle;allObstacles.push(r)}}function collision(t){return t instanceof Enemy&&t.y===player.y&&Math.abs(t.x-player.x)<50||t instanceof Obstacle&&t.y===player.y&&t.x===player.x}function checkCollisionsWithObstacle(t){for(var e=0;e<t.length;e++)if(collision(t[e]))return!0}var WIDTH=101,HEIGHT=83,BASIC_SPEED=100,HighScore=0,ScoreFlag=!0,pavement=function(){var t=[];return t.reset=function(){for(var e=0;e<4;e++){t[e]=[];for(var r=0;r<5;r++)t[e][r]=!1}},t.reset(),t}(),removeObstacle=function(){if(0!==allObstacles.length){var t=Math.floor(Math.random()*allObstacles.length),e=allObstacles[t].y/HEIGHT-1,r=allObstacles[t].x/WIDTH;pavement[e][r]=!1,allObstacles.splice(t,1)}},Enemy=function(){this.x=3*WIDTH,this.y=2*HEIGHT,this.speed=BASIC_SPEED,this.damage=4,this.sprite="images/enemy-bug.png"};Enemy.prototype.initProperty=function(){this.x=-Math.ceil(3*Math.random())*WIDTH,this.y=Math.ceil(4*Math.random())*HEIGHT,this.speed=BASIC_SPEED+50*Math.ceil(3*Math.random())},Enemy.prototype.move=function(t){this.x+=t*this.speed},Enemy.prototype.update=function(t){this.move(t),this.x>5*WIDTH&&this.initProperty()},Enemy.prototype.render=function(){ctx.drawImage(Resources.get(this.sprite),this.x,this.y+15,60,105)};var Entity=function(){this.initPosition()};Entity.prototype.initPosition=function(){var t,e;for(t=Math.floor(5*Math.random()),e=Math.floor(4*Math.random()),this.x=WIDTH*t,this.y=HEIGHT*(e+1);!0===pavement[e][t]||this.x===player.x&&this.y===player.y;)t=Math.floor(5*Math.random()),e=Math.floor(4*Math.random()),this.x=WIDTH*t,this.y=HEIGHT*(e+1);pavement[e][t]=!0,console.log(pavement)};var Obstacle=function(){Entity.call(this),this.sprite="images/Rock.png"};Obstacle.prototype=Object.create(Entity.prototype),Obstacle.prototype.constructor=Obstacle,Obstacle.prototype.render=function(){ctx.drawImage(Resources.get(this.sprite),this.x+20,this.y+15,60,105)};var Treasure=function(){Entity.call(this)};Treasure.prototype=Object.create(Entity.prototype),Treasure.prototype.constructor=Treasure,Treasure.prototype.render=function(){ctx.drawImage(Resources.get(this.sprite),this.x+20,this.y+15,60,105)};var Player=function(){this.x=3*WIDTH,this.y=5*HEIGHT,this.hp=100,this.score=0,this.sprite="images/char-boy.png"};Player.prototype.resetPlayer=function(){var t=setTimeout(function(){player.y=5*HEIGHT,player.x=2*WIDTH,ScoreFlag=!0},300)},Player.prototype.checkCollisionsWithEnemy=function(t){t.forEach(function(t){collision(t)&&(player.hp-=t.damage)})},Player.prototype.checkCollisionsWithObstacle=function(t){t.forEach(function(t){collision(t)})},Player.prototype.update=function(t){this.y<HEIGHT?(this.y=0,!0===ScoreFlag&&(this.score+=100,ScoreFlag=!1),this.resetPlayer()):this.y>5*HEIGHT&&(this.y=5*HEIGHT),this.checkCollisionsWithEnemy(allEnemies),this.hp<=0&&(alert("game over!"),this.score=0,player.resetPlayer(),this.hp=100),$(".hp").html(player.hp),$(".score").html(player.score),$(".highscore").html(HighScore),this.x<0?this.x=0:this.x>4*WIDTH&&(this.x=4*WIDTH),HighScore<this.score&&(HighScore=this.score)},Player.prototype.render=function(){ctx.drawImage(Resources.get(this.sprite),this.x,this.y-10)},Player.prototype.handleInput=function(t){var e=this.x,r=this.y;switch(t){case"left":this.x-=WIDTH;break;case"right":this.x+=WIDTH;break;case"up":this.y-=HEIGHT;break;case"down":this.y+=HEIGHT;break;case"space":removeObstacle();break;default:return}checkCollisionsWithObstacle(allObstacles)&&(this.x=e,this.y=r)};var player=new Player,allEnemies=[],allObstacles=[];addObstacle(4),addEnemy(5),document.addEventListener("keyup",function(t){var e={37:"left",38:"up",39:"right",40:"down",32:"space"};player.handleInput(e[t.keyCode])});